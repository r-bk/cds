name: ci

on:
  push:
    branches-ignore:
      - '**-wip'
  pull_request:
  schedule:
    - cron: '0 1 * * 0'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings

jobs:
  ci:
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.56.0  # MSRV
        runs_on:
          - ubuntu-latest
        feature:
          - all
          - ''
          - default
          - std
          - arrayvec
          - arrayvec,std
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        name: build cds
        if: ${{ matrix.feature != 'all' && matrix.feature != '' }}
        with:
          command: build
          args: --no-default-features --features ${{ matrix.feature }}

      - uses: actions-rs/cargo@v1
        name: build all cds
        if: ${{ matrix.feature == 'all' }}
        with:
          command: build
          args: --all-features

      - uses: actions-rs/cargo@v1
        name: build no-default-features cds
        if: ${{ matrix.feature == '' }}
        with:
          command: build
          args: --no-default-features

      - uses: actions-rs/cargo@v1
        name: test cds
        if: ${{ matrix.feature != 'all' && matrix.feature != '' }}
        with:
          command: test
          args: --no-default-features --features ${{ matrix.feature }}

      - uses: actions-rs/cargo@v1
        name: test all cds
        if: ${{ matrix.feature == 'all' }}
        with:
          command: test
          args: --all-features

      - uses: actions-rs/cargo@v1
        name: test no-default-features cds
        if: ${{ matrix.feature == '' }}
        with:
          command: test
          args: --no-default-features

      - uses: actions-rs/cargo@v1
        name: lint cds
        if: ${{ matrix.feature != 'all' && matrix.feature != '' }}
        with:
          command: clippy
          args: --no-default-features --features ${{ matrix.feature }}

      - uses: actions-rs/cargo@v1
        name: lint all cds
        if: ${{ matrix.feature == 'all' }}
        with:
          command: clippy
          args: --all-features

      - uses: actions-rs/cargo@v1
        name: lint no-default-features cds
        if: ${{ matrix.feature == '' }}
        with:
          command: clippy
          args: --no-default-features

  common-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        name: format all
        with:
          command: fmt
          args: -- --check
      - uses: actions-rs/cargo@v1
        name: doc cds
        env:
          RUSTDOCFLAGS: "--cfg docsrs"
        with:
          command: doc
          args: --all-features --no-deps

  coverage:
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
        name: tarpaulin
        with:
          toolchain: nightly
          command: tarpaulin
          args: --all-features --out Xml --out Html
      - uses: actions/upload-artifact@v2
        with:
          name: tarpaulin-report.html
          path: tarpaulin-report.html
